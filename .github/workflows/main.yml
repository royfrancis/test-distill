name: build
on:
  push:
    branches-ignore:
      - gh-pages
jobs:
  build-website:
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-18.04, r: '4.0'}
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
      - uses: r-lib/actions/setup-pandoc@master
        with:
          r-version: ${{ matrix.config.r }}
      - name: Install linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev libssl-dev libcurl4-openssl-dev libudunits2-dev libopenblas-base
      - name: Define variables
        run: |
          echo "path_repo=$(pwd)" >> $GITHUB_ENV
          echo "path_export=docs" >> $GITHUB_ENV
          echo "repo=$(echo $GITHUB_REPOSITORY | sed 's/.*\///')" >> $GITHUB_ENV
      - name: Check R installation and variables
        run: |
          Rscript -e "print('R installation works!')"
          echo "Github actor: ${GITHUB_ACTOR}"
          echo "Github repository: ${GITHUB_REPOSITORY}"
          echo "Github repo: ${repo}"
          echo "Path repo: ${path_repo}"
          echo "Path export: ${path_export}"
          echo "---------------------------------------------------------------------------------------------"
          echo "Folder contents at $(pwd):"
          ls -lh
          echo "---------------------------------------------------------------------------------------------"
          printenv
          sed --version
      - name: Cache R packages
        id: cache-rp
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ matrix.config.r }}
      - name: Install R dependencies
        if: steps.cache-rp.outputs.cache-hit != 'true'
        run: |
          Rscript -e 'install.packages(c("distill"))'
          Rscript -e 'installed.packages()'
          echo ""
          echo "R directory size:"
          du -sh ${{ env.R_LIBS_USER }}
      - name: Build site, pull repo, copy folder contents, push repo
        run: |
          # Add git info
          git config --global user.email "do_not_email@example.com"
          git config --global user.name "gh_action"

          # Render website
          echo "Building website ..."
          Rscript -e "rmarkdown::render_site()"

          # List folder contents
          echo "Folder contents at $(pwd):"
          ls -lh
          echo "Folder contents at ${path_repo}/${path_export}:"
          ls -lh ${path_repo}/${path_export}

          # Clone gh-pages branch and remove old directories with same name
          git clone --single-branch --branch gh-pages "https://${{ secrets.TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" tmprepo
          cd tmprepo
          git rm -r *
          git commit -m "Old directory ${path_export} deleted."

          cd ${path_repo}
          cp -r $path_export/* tmprepo/
          cd tmprepo
          echo "Folder contents at $(pwd):"
          ls -lh

          # Push changes back
          git add .
          git commit -m "Updated contents at $(date +%Y%m%d-%H%M%S)"
          git push origin
